# Default values for openldap.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
workloadType: Deployment

image:
  repository: ghcr.io/linuxserver/bazarr
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

metrics:
  enabled: false
  port: 9707
  dockerModsUrl: lscr.io/linuxserver/mods
  image:
    repository: ghcr.io/onedr0p/exportarr
    tag: v2.0.1
  # configVolumeName: config
  # following envs are computed defaults, by defining env key as probe key, will override defaults
  # env:
  #   URL: http://127.0.0.1:6767
  #   API_KEY_FILE: /shared/apikey
  #   PORT: "9707"
  # these will be supplied alongside default values if not overridden
  # extraEnv: {}
  # probe: {} # can be disabled by defining empty key, or to override defaults
  # resources:
  #   limits:
  #     cpu: 100m
  #     memory: 100Mi
serviceMonitor:
  create: false
  endpoint:
    targetPort: 9707
    path: /metrics
    scheme: http

hostname: bazarr
# subdomain: localdomain
dnsPolicy: "ClusterFirstWithHostNet"
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# env:
#   TZ: Etc/UTC

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  main:
    type: ClusterIP
    ports:
    - name: http
      port: 6767
      ingress: true
      protocol: TCP


probe:
  liveness:
    enabled: true
    initialDelaySeconds: 20
    periodSeconds: 10
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 10
    tcpSocket:
      default: true
      port: http

  readiness:
    enabled: true
    initialDelaySeconds: 2
    periodSeconds: 10
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 10
    tcpSocket:
      default: true
      port: http

  startup:
    enabled: true
    initialDelaySeconds: 0
    periodSeconds: 10
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 30
    tcpSocket:
      default: true
      port: http

persistence: {}
  # config:
  #   enabled: true
  #   mount:
  #   - path: /config
  #   spec:
  #     emptyDir: {}
  # movies:
  #   enabled: true
  #   mount:
  #   - path: /movies
  #   spec:
  #     hostPath:
  #       path: /path/to/movies
  #       type: Directory # DirectoryOrCreate
  # tv:
  #   enabled: true
  #   mount:
  #   - path: /tv
  #   spec:
  #     hostPath:
  #       path: /path/to/tv
  #       type: Directory # DirectoryOrCreate

ingress:
  main:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
        # servicePort: 80
        # serviceName: otherService
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
