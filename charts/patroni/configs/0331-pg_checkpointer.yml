#==============================================================#
# 0331 pg_checkpointer
#==============================================================#
pg_checkpointer_18:
  name: pg_checkpointer
  desc: "PostgreSQL checkpointer stat metrics for pg 18+"
  query: SELECT num_timed, num_requested, num_done, restartpoints_timed, restartpoints_req, restartpoints_done, write_time, sync_time, buffers_written, slru_written, extract(EPOCH FROM stats_reset) AS reset_time FROM pg_stat_checkpointer;
  ttl: 10
  min_version: 180000
  tags: [ cluster ]
  metrics:
    - num_timed:             { usage: COUNTER ,rename: timed ,description: Number of scheduled checkpoints that have been performed }
    - num_requested:         { usage: COUNTER ,rename: req   ,description: Number of requested checkpoints that have been performed }
    - num_done:              { usage: COUNTER ,rename: done  ,description: Number of checkpoints that have been performed }
    - restartpoints_timed:   { usage: COUNTER                ,description: Number of scheduled restartpoints due to timeout or after a failed attempt to perform it }
    - restartpoints_req:     { usage: COUNTER                ,description: Number of requested restartpoints }
    - restartpoints_done:    { usage: COUNTER                ,description: Number of restartpoints that have been performed }
    - write_time:            { usage: COUNTER ,scale: 1e-3   ,description: Total amount of time that has been spent in the portion of checkpoint processing where files are written to disk, in seconds }
    - sync_time:             { usage: COUNTER ,scale: 1e-3   ,description: Total amount of time that has been spent in the portion of checkpoint processing where files are synchronized to disk, in seconds }
    - buffers_written:       { usage: COUNTER                ,description: Number of buffers written during checkpoints and restartpoints }
    - slru_written:          { usage: COUNTER                ,description: Number of SLRU buffers written during checkpoints and restartpoints }
    - reset_time:            { usage: GAUGE                  ,description: Time at which checkpointer statistics were last reset }

pg_checkpointer_17:
  name: pg_checkpointer
  desc: "PostgreSQL checkpointer stat metrics for pg 17+"
  query: SELECT num_timed, num_requested, restartpoints_timed, restartpoints_req, restartpoints_done, write_time, sync_time, buffers_written, extract(EPOCH FROM stats_reset) AS reset_time FROM pg_stat_checkpointer;
  ttl: 10
  min_version: 170000
  max_version: 180000
  tags: [ cluster ]
  metrics:
    - num_timed:             { usage: COUNTER ,rename: timed ,description: Number of scheduled checkpoints that have been performed }
    - num_requested:         { usage: COUNTER ,rename: req   ,description: Number of requested checkpoints that have been performed }
    - restartpoints_timed:   { usage: COUNTER                ,description: Number of scheduled restartpoints due to timeout or after a failed attempt to perform it }
    - restartpoints_req:     { usage: COUNTER                ,description: Number of requested restartpoints }
    - restartpoints_done:    { usage: COUNTER                ,description: Number of restartpoints that have been performed }
    - write_time:            { usage: COUNTER ,scale: 1e-3   ,description: Total amount of time that has been spent in the portion of checkpoint processing where files are written to disk, in seconds }
    - sync_time:             { usage: COUNTER ,scale: 1e-3   ,description: Total amount of time that has been spent in the portion of checkpoint processing where files are synchronized to disk, in seconds }
    - buffers_written:       { usage: COUNTER                ,description: Number of buffers written during checkpoints and restartpoints }
    - reset_time:            { usage: GAUGE                  ,description: Time at which checkpointer statistics were last reset }

pg_checkpointer_10:
  name: pg_checkpointer
  desc: "PostgreSQL checkpointer stat metrics for pg 10+"
  query: SELECT checkpoints_timed, checkpoints_req, checkpoint_write_time, checkpoint_sync_time, buffers_checkpoint, extract(EPOCH FROM stats_reset) AS reset_time FROM pg_stat_bgwriter;
  ttl: 10
  min_version: 090400
  max_version: 170000
  tags: [ cluster ]
  metrics:
    - checkpoints_timed:     { usage: COUNTER ,rename: timed                   ,description: Number of scheduled checkpoints that have been performed }
    - checkpoints_req:       { usage: COUNTER ,rename: req                     ,description: Number of requested checkpoints that have been performed }
    - checkpoint_write_time: { usage: COUNTER ,rename: write_time ,scale: 1e-3 ,description: Total amount of time that has been spent in the portion of checkpoint processing where files are written to disk, in seconds }
    - checkpoint_sync_time:  { usage: COUNTER ,rename: sync_time  ,scale: 1e-3 ,description: Total amount of time that has been spent in the portion of checkpoint processing where files are synchronized to disk, in seconds }
    - buffers_checkpoint:    { usage: COUNTER ,rename: buffers_written         ,description: Number of buffers written during checkpoints and restartpoints }
    - reset_time:            { usage: GAUGE                                    ,description: Time at which checkpointer statistics were last reset }


